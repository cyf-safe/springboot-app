spring.application.name = springboot-web
server.port = 8080
server.servlet.context-path = /

spring.mvc.view.prefix = /WEB-INF/jsp/
spring.mvc.view.suffix = .jsp
spring.mvc.static-path-pattern = /**
spring.mvc.async.request-timeout = 20000

spring.thymeleaf.prefix = classpath:/templates/jsp/
spring.thymeleaf.suffix = .html
spring.thymeleaf.mode = HTML5
spring.thymeleaf.encoding = UTF-8
spring.thymeleaf.content-type = text/html
spring.thymeleaf.cache = false

spring.resources.chain.strategy.content.enabled = true
spring.resources.chain.strategy.content.paths = /**
spring.resources.static-locations = classpath:/templates/,classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/

spring.freemarker.request-context-attribute = ctx
spring.freemarker.suffix = .html
spring.freemarker.content-type = text/html
spring.freemarker.enabled = true
spring.freemarker.cache = false
spring.freemarker.template-loader-path = classpath:/templates/jsp/

eureka.client.serviceUrl.defaultZone = http://admin:123456@127.0.0.1:8761/eureka/
eureka.client.registerWithEureka = false
eureka.client.fetchRegistry = true
eureka.instance.prefer-ip-address = true
eureka.instance.instance-id = ${spring.application.name}:${server.port}

spring.redis.database = 0
spring.redis.host = 127.0.0.1
spring.redis.port = 6379
spring.redis.timeout = 1000
spring.redis.password =
spring.redis.max-active = 200
spring.redis.max-wait = -1
spring.redis.max-idle = 100
spring.redis.min-idle = 20

management.endpoints.web.exposure.include = '*'
management.endpoint.health.show-details = always

ribbon.connectTimeout = 5000
ribbon.readTimeout = 5000
ribbon.http =
ribbon.client =
ribbon.enabled = true

feign.client.config.default.connectTimeout = 2000
feign.client.config.default.readTimeout = 2000

login.timeout.minutes = 60

#熔断器启用
feign.hystrix.enabled=true
#线程池核心线程数
hystrix.threadpool.default.coreSize = 1
hystrix.command.default.execution.timeout.enabled=true
#断路器的超时时间,下级服务返回超出熔断器时间，即便成功，消费端消息也是TIMEOUT,所以一般断路器的超时时间需要大于ribbon的超时时间，ribbon是真正去调用下级服务
#当服务的返回时间大于ribbon的超时时间，会触发重试
#断路器的超时时间默认为1000ms，太小了
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests = 1000
#断路器详细设置
#当在配置时间窗口内达到此数量的失败后，进行短路。默认20个）
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
#短路多久以后开始尝试是否恢复，默认5s）
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5
#出错百分比阈值，当达到此阈值后，开始短路。默认50%）
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50%

#springboot-service appid
springboot-service-appid = springboot-service